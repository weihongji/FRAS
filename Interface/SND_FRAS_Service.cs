//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="SND_FRAS_ServiceSoap", Namespace="http://www.SND.com/FRAS/20120721")]
public partial class SND_FRAS_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetKQReportOperationCompleted;
    
    /// <remarks/>
    public SND_FRAS_Service() {
        this.Url = "http://10.21.11.213/SND/Service/WebService.asmx";
    }
    
    /// <remarks/>
    public event GetKQReportCompletedEventHandler GetKQReportCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.SND.com/FRAS/20120721/GetKQReport", RequestNamespace="http://www.SND.com/FRAS/20120721", ResponseNamespace="http://www.SND.com/FRAS/20120721", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] GetKQReport(System.DateTime Date) {
        object[] results = this.Invoke("GetKQReport", new object[] {
                    Date});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetKQReport(System.DateTime Date, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetKQReport", new object[] {
                    Date}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndGetKQReport(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void GetKQReportAsync(System.DateTime Date) {
        this.GetKQReportAsync(Date, null);
    }
    
    /// <remarks/>
    public void GetKQReportAsync(System.DateTime Date, object userState) {
        if ((this.GetKQReportOperationCompleted == null)) {
            this.GetKQReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKQReportOperationCompleted);
        }
        this.InvokeAsync("GetKQReport", new object[] {
                    Date}, this.GetKQReportOperationCompleted, userState);
    }
    
    private void OnGetKQReportOperationCompleted(object arg) {
        if ((this.GetKQReportCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetKQReportCompleted(this, new GetKQReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetKQReportCompletedEventHandler(object sender, GetKQReportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetKQReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetKQReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}
